namespace: monitoring

clusterRole:
  name: custom-metrics-server-resources
  rules:
    apiGroups:
    - custom.metrics.k8s.io
    resources:
    verbs:

delegator:
  clusterRoleBinding:
    name: custom-metrics:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subject:
      kind: ServiceAccount
      name: custom-metrics-apiserver

reader:
  roleBinding:
    name: custom-metrics-auth-reader
    roleRef:
      name: extension-apiserver-authentication-reader

apiserver:
  name: custom-metrics-apiserver
  replicas: 1
  image: sreddybr3/custom-metrics-prometheus-adapter
  tag: latest
  servicePort: 443
  containerPort: 6443
  volumes:
    path: /var/run/serving-cert
    name: volume-serving-cert
    secretName: cm-adapter-serving-certs
    readOnly: true
  serviceAccount: custom-metrics-apiserver
  service:
  clusterRole:
  args:
  - /adapter
  - --secure-port=6443
  - --tls-cert-file=/var/run/serving-cert/serving.crt
  - --tls-private-key-file=/var/run/serving-cert/serving.key
  - --logtostderr=true
  - --prometheus-url=http://prometheus-server.monitoring.svc:80/
  - --metrics-relist-interval=5m
  - --v=10
  - --config=/etc/adapter/config.yaml

apiservice:
  version: v1beta1
  group: custom.metrics.k8s.io
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100

hpa:
  roleBinding:
    name: controller-custom-metrics
  roleRef:
    name: custom-metrics-server-resources
  subjects:
    name: horizontal-pod-autoscaler

resourceReader:
  clusterRoleBinding:
    name: custom-metrics-resource-reader
  clusterRole:
    resources:
    - namespaces
    - pods
    - services
    - configmaps
    verbs:
    - get
    - list

